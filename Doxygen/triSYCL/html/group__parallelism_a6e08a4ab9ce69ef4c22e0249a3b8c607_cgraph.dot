digraph "cl::sycl::item::get_linear_id"
{
 // INTERACTIVE_SVG=YES
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="cl::sycl::item::get\l_linear_id",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="cl::sycl::item::get\l_offset",height=0.2,width=0.4,color="black",URL="$group__parallelism.html#a651967188784fa1218e0bd2d3eaed10e",tooltip="Returns an id<> representing the n-dimensional offset provided to the parallel_for and that is added ..."];
  Node1 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="cl::sycl::item::get\l_range",height=0.2,width=0.4,color="black",URL="$group__parallelism.html#ad2d3781b253948798d3832461c7608b0",tooltip="Returns a range<> representing the dimensions of the range of possible values of the item..."];
  Node1 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="cl::sycl::detail::linear_id",height=0.2,width=0.4,color="black",URL="$group__helpers.html#gaec2e5439abadff6aea357ab692965b6d",tooltip="Compute a linearized array access used in the OpenCL 2 world. "];
}
