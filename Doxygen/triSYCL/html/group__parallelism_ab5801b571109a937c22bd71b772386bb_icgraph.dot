digraph "cl::sycl::nd_range::get_group"
{
 // INTERACTIVE_SVG=YES
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="cl::sycl::nd_range\l::get_group",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="cl::sycl::detail::parallel_for",height=0.2,width=0.4,color="black",URL="$group__parallelism.html#ga3156c9a9179d62eb40321f2b86448cea",tooltip="Implement a variation of parallel_for to take into account a nd_range<> "];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="cl::sycl::detail::parallel\l_for_workgroup",height=0.2,width=0.4,color="black",URL="$group__parallelism.html#gaaa0f5e798ca65419dce78013af732580",tooltip="Implement the loop on the work-groups. "];
  Node3 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="cl::sycl::handler::\lparallel_for_work_group",height=0.2,width=0.4,color="black",URL="$group__execution.html#a5ae74565e39d4763c7efdba3581d087b",tooltip="Hierarchical kernel invocation method of a kernel defined as a lambda encoding the body of each work-..."];
}
