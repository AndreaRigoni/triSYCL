digraph "cl::sycl::detail::unimplemented"
{
 // INTERACTIVE_SVG=YES
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="cl::sycl::detail::unimplemented",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="cl::sycl::nd_item::\lbarrier",height=0.2,width=0.4,color="black",URL="$group__parallelism.html#a9b7505034c0a22fbe8be199169b86d0a",tooltip="Execute a barrier with memory ordering on the local address space, global address space or both based..."];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="cl::sycl::context::\lcontext",height=0.2,width=0.4,color="black",URL="$group__execution.html#a0b58a056d08076460e1a6274e912d5c7",tooltip="Constructs a context object for SYCL host using an async_handler for handling asynchronous errors..."];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="cl::sycl::device::create\l_sub_devices",height=0.2,width=0.4,color="black",URL="$group__execution.html#a95e28b2bfa76f0595880073a8c59a40b",tooltip="Partition the device into sub devices based upon the properties provided. "];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="cl::sycl::device::device",height=0.2,width=0.4,color="black",URL="$group__execution.html#a8a17689112f5d656a8d2f5dc7a1a3517",tooltip="Construct a device class instance using cl_device_id of the OpenCL device. "];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="cl::sycl::platform::get",height=0.2,width=0.4,color="black",URL="$group__execution.html#a4e04c4e7676e4b89736240950b8600e8",tooltip="Returns the cl_platform_id of the underlying OpenCL platform. "];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="cl::sycl::context::get",height=0.2,width=0.4,color="black",URL="$group__execution.html#a744ad885bc0ff01c30d0cbcdf457eafb"];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="cl::sycl::queue::get",height=0.2,width=0.4,color="black",URL="$group__execution.html#a282df58d7668c2d3f8954844ee046197",tooltip="Return the underlying OpenCL command queue after doing a retain. "];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="cl::sycl::device::get",height=0.2,width=0.4,color="black",URL="$group__execution.html#ad3c5799d21d28f29c5cd9ecfce4351d6",tooltip="Return the cl_device_id of the underlying OpenCL platform. "];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="cl::sycl::queue::get\l_context",height=0.2,width=0.4,color="black",URL="$group__execution.html#ad2fe33ee9399e026f4694fe21478664e",tooltip="Return the SYCL queueâ€™s context. "];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="cl::sycl::queue::get\l_device",height=0.2,width=0.4,color="black",URL="$group__execution.html#a46f35b95e7141e277677270c037228e0",tooltip="Return the SYCL device the queue is associated with. "];
  Node1 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="cl::sycl::platform\l::get_devices",height=0.2,width=0.4,color="black",URL="$group__execution.html#a627702d3c4dd161bf77f543cc8807cb4",tooltip="Returns all the available devices for this platform, of type device type, which is defaulted to info:..."];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="cl::sycl::context::\lget_devices",height=0.2,width=0.4,color="black",URL="$group__execution.html#af9c31b58d2afdd7b134b70923bebe758",tooltip="Returns the set of devices that are part of this context. "];
  Node1 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="cl::sycl::device::get\l_devices",height=0.2,width=0.4,color="black",URL="$group__execution.html#a0ff8c15c66d910f40379a34d6516a7e8",tooltip="Return a list of all available devices. "];
  Node1 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="cl::sycl::platform\l::get_info",height=0.2,width=0.4,color="black",URL="$group__execution.html#af545c7d1e1f9c4d25a84e16a8622060f",tooltip="Get the OpenCL information about the requested parameter. "];
  Node1 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="cl::sycl::context::\lget_info",height=0.2,width=0.4,color="black",URL="$group__execution.html#a7c734b8e445e974b8df923eda189abaf",tooltip="Queries OpenCL information for the under-lying cl context. "];
  Node1 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="cl::sycl::queue::get_info",height=0.2,width=0.4,color="black",URL="$group__execution.html#af077e29c7384869ae7d80b3ef4c44e20",tooltip="Queries the platform for cl_command_queue info. "];
  Node1 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="cl::sycl::device::get_info",height=0.2,width=0.4,color="black",URL="$group__execution.html#ab1e0b3818e38f450c8cf612965370570",tooltip="Query the device for OpenCL info::device info. "];
  Node1 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="cl::sycl::device::get\l_platform",height=0.2,width=0.4,color="black",URL="$group__execution.html#a1f2447bfc916e8f382b0f49ecbfb7b2c",tooltip="Return the platform of device. "];
  Node1 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="cl::sycl::platform\l::get_platforms",height=0.2,width=0.4,color="black",URL="$group__execution.html#aabb03c54d8e57513595cbb363b52af96",tooltip="Get the list of all the platforms available to the application. "];
  Node1 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="cl::sycl::platform\l::has_extension",height=0.2,width=0.4,color="black",URL="$group__execution.html#a72f83879bad214c84079687f39506954",tooltip="Test if an extension is available on the platform. "];
  Node1 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="cl::sycl::device::has\l_extension",height=0.2,width=0.4,color="black",URL="$group__execution.html#aadac80e0ecf5f5cd82877a1e8beede20",tooltip="Specify whether a specific extension is supported on the device. "];
  Node1 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="cl::sycl::device::is\l_accelerator",height=0.2,width=0.4,color="black",URL="$group__execution.html#a900db8487f118d653017abc7f9949d1f",tooltip="Return true if the device is an OpenCL accelerator device. "];
  Node1 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="cl::sycl::device::is_cpu",height=0.2,width=0.4,color="black",URL="$group__execution.html#a2ad8cb3462516a0f3069875640d44dc1",tooltip="Return true if the device is an OpenCL CPU device. "];
  Node1 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="cl::sycl::device::is_gpu",height=0.2,width=0.4,color="black",URL="$group__execution.html#a75b085b8e49d8bdd9511adb61aeeca37",tooltip="Return true if the device is an OpenCL GPU device. "];
  Node1 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="cl::sycl::queue::is_host",height=0.2,width=0.4,color="black",URL="$group__execution.html#affe18def9e9082f4a8bbdabea974fa92",tooltip="Return whether the queue is executing on a SYCL host device. "];
  Node1 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="cl::sycl::device::is_host",height=0.2,width=0.4,color="black",URL="$group__execution.html#a5bef943886c69c9dff340479fd1525b8",tooltip="Return true if the device is a SYCL host device. "];
  Node1 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="cl::sycl::default_selector\l::operator()",height=0.2,width=0.4,color="black",URL="$group__execution.html#ae56d48cc41b48a83acf0f45cb9a6e578",tooltip="This pure virtual operator allows the customization of device selection. "];
  Node1 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="cl::sycl::gpu_selector\l::operator()",height=0.2,width=0.4,color="black",URL="$group__execution.html#a779c05344908da1d0741094280f949d0",tooltip="This pure virtual operator allows the customization of device selection. "];
  Node1 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="cl::sycl::cpu_selector\l::operator()",height=0.2,width=0.4,color="black",URL="$group__execution.html#a3a4684ca1886ee61b14fb13f8422900d",tooltip="This pure virtual operator allows the customization of device selection. "];
  Node1 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node31 [label="cl::sycl::host_selector\l::operator()",height=0.2,width=0.4,color="black",URL="$group__execution.html#a04cb56999f3d0333af3accf4a1fba3ef",tooltip="This pure virtual operator allows the customization of device selection. "];
  Node1 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 [label="cl::sycl::handler::\lparallel_for",height=0.2,width=0.4,color="black",URL="$group__execution.html#aa1f5b10593d5d4f28a0ac1cf38b6b0ee",tooltip="Kernel invocation method of a kernel defined as pointer to a kernel object, for the specified range a..."];
  Node1 -> Node33 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 [label="cl::sycl::platform\l::platform",height=0.2,width=0.4,color="black",URL="$group__execution.html#aa1f65ac290f16f50f8c840373a26a767",tooltip="Construct a default platform and provide an optional error_handler to deals with errors. "];
  Node1 -> Node34 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node34 [label="cl::sycl::queue::queue",height=0.2,width=0.4,color="black",URL="$group__execution.html#aa6716dec650fed3005217afa456d0ff8",tooltip="This constructor creates a SYCL queue from an OpenCL queue. "];
  Node1 -> Node35 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node35 [label="cl::sycl::device_selector\l::select_device",height=0.2,width=0.4,color="black",URL="$group__execution.html#adf892bff5bdcef8ed28a1529c619e954",tooltip="Returns a selected device using the functor operator defined in sub-classes operator()(const device &..."];
  Node1 -> Node36 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node36 [label="cl::sycl::handler::\lset_arg",height=0.2,width=0.4,color="black",URL="$group__execution.html#a27acb04ca9c46b29bebdd7bcfef87cf5",tooltip="Set kernel args for an OpenCL kernel which is used through the SYCL/OpenCL interop interface..."];
  Node1 -> Node37 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node37 [label="cl::sycl::handler::\lsingle_task",height=0.2,width=0.4,color="black",URL="$group__execution.html#a753a7db9214d40fb8d43ac6c8b6833e2",tooltip="Kernel invocation method of a kernel defined as pointer to a kernel object, described in detail in 3..."];
  Node1 -> Node38 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node38 [label="cl::sycl::queue::submit",height=0.2,width=0.4,color="black",URL="$group__execution.html#ae9f65c6cbb74bcfccbe1c04df52d5170",tooltip="Submit a command group functor to the queue, in order to be scheduled for execution on the device..."];
  Node1 -> Node39 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node39 [label="cl::sycl::queue::throw\l_asynchronous",height=0.2,width=0.4,color="black",URL="$group__execution.html#ae5c39ed682422e4e525fe0a01e8b7ad9",tooltip="Checks to see if any asynchronous errors have been produced by the queue and if so reports them by pa..."];
  Node1 -> Node40 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node40 [label="cl::sycl::queue::wait",height=0.2,width=0.4,color="black",URL="$group__execution.html#ac46bc8ee7cff0a3f77c7afb7d60184b4",tooltip="Performs a blocking wait for the completion all enqueued tasks in the queue. "];
  Node1 -> Node41 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node41 [label="cl::sycl::queue::wait\l_and_throw",height=0.2,width=0.4,color="black",URL="$group__execution.html#abfa510446db9f4edd0c16270b199a232",tooltip="Perform a blocking wait for the completion all enqueued tasks in the queue. "];
}
